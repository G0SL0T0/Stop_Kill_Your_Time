document.addEventListener('DOMContentLoaded', () => {
    // ----- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ -----
    const API_BASE_URL = 'http://localhost:3000/api'; // –ë–∞–∑–æ–≤—ã–π URL API
    const historyTableBody = document.getElementById('history-table-body');
    const searchInput = document.getElementById('search-query');
    const categoryFilter = document.getElementById('category-filter');
    const dateFromInput = document.getElementById('date-from');
    const dateToInput = document.getElementById('date-to');
    const applyFiltersBtn = document.getElementById('apply-filters-btn');
    const prevPageBtn = document.getElementById('prev-page');
    const nextPageBtn = document.getElementById('next-page');
    const currentPageSpan = document.getElementById('current-page');
    const totalPagesSpan = document.getElementById('total-pages');

    let currentPage = 1;
    let totalPages = 1;
    const limit = 20;

    // ----- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö -----
    async function fetchHistory() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        historyTableBody.innerHTML = `<tr><td colspan="4" style="text-align: center; padding: var(--space-lg);">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</td></tr>`;
        prevPageBtn.disabled = true;
        nextPageBtn.disabled = true;

        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
        const params = new URLSearchParams({
            page: currentPage,
            limit: limit,
        });

        const query = searchInput.value.trim();
        const category = categoryFilter.value;
        const dateFrom = dateFromInput.value;
        const dateTo = dateToInput.value;

        if (query) params.append('query', query);
        if (category) params.append('category', category);
        if (dateFrom) params.append('dateFrom', dateFrom);
        // –î–æ–±–∞–≤–ª—è–µ–º –∫ –¥–∞—Ç–µ "–¥–æ" –≤—Ä–µ–º—è 23:59:59, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –≤–µ—Å—å –¥–µ–Ω—å
        if (dateTo) params.append('dateTo', `${dateTo}T23:59:59`);

        try {
            const response = await fetch(`${API_BASE_URL}/history?${params.toString()}`);

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || `–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
            }

            const data = await response.json(); // –û–∂–∏–¥–∞–µ–º { data: [], totalPages: number } –æ—Ç API

            renderHistoryTable(data.data || []); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            totalPages = data.totalPages || 1; // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
            updatePagination(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:', error);
            historyTableBody.innerHTML = `<tr><td colspan="4" style="text-align: center; color: var(--color-danger); padding: var(--space-lg);">‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é: ${error.message}</td></tr>`;
            currentPage = 1;
            totalPages = 1;
            updatePagination();
        }
    }

    // ----- –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã -----
    function renderHistoryTable(items) {
        historyTableBody.innerHTML = ''; // –û—á–∏—Å—Ç–∫–∞

        if (!items || items.length === 0) {
            historyTableBody.innerHTML = `<tr><td colspan="4" style="text-align: center; padding: var(--space-lg);">ü§∑‚Äç‚ôÇÔ∏è –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</td></tr>`;
            return;
        }

        items.forEach(item => {
            const row = document.createElement('tr');

            // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã 
            const formattedDate = item.visitedAt
                ? new Date(item.visitedAt).toLocaleString('ru-RU', {
                      year: 'numeric', month: '2-digit', day: '2-digit',
                      hour: '2-digit', minute: '2-digit'
                  })
                : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            const shortTitle = item.title && item.title.length > 80 ? item.title.substring(0, 77) + '...' : (item.title || '(–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞)');
            let displayUrl = item.url || 'N/A';
             try {
                 // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–æ–º–µ–Ω –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –ø—É—Ç—å
                 const urlObj = new URL(item.url);
                 displayUrl = urlObj.hostname + (urlObj.pathname.length > 1 ? urlObj.pathname.substring(0, 20) + '...' : '');
             } catch (e) { /* –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ URL –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π */ }


            // –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            const category = item.category || 'unknown';
            const categoryClass = `cat-${category.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;
            const categoryBadge = `<span class="category-badge ${categoryClass}">${category}</span>`;

            row.innerHTML = `
                <td>${formattedDate}</td>
                <td>${shortTitle}</td>
                <td><a href="${item.url}" target="_blank" title="${item.url}">${displayUrl}</a></td>
                <td>${categoryBadge}</td>
            `;
            historyTableBody.appendChild(row);
        });
    }

    // ----- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ -----
    function updatePagination() {
        currentPageSpan.textContent = currentPage;
        totalPagesSpan.textContent = totalPages;

        prevPageBtn.disabled = currentPage <= 1;
        nextPageBtn.disabled = currentPage >= totalPages;
    }

    // ----- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π -----

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    applyFiltersBtn.addEventListener('click', () => {
        currentPage = 1;
        fetchHistory();
    });

    // –ü–æ–∏—Å–∫ –ø–æ Enter
     searchInput.addEventListener('keydown', (event) => {
        if (event.key === 'Enter') {
            currentPage = 1;
            fetchHistory();
        }
    });

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    prevPageBtn.addEventListener('click', () => {
        if (currentPage > 1) {
            currentPage--;
            fetchHistory();
        }
    });

    // –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
    nextPageBtn.addEventListener('click', () => {
        if (currentPage < totalPages) {
            currentPage++;
            fetchHistory();
        }
    });

    // ----- –ó–∞–≥—Ä—É–∑–∫–∞ -----
    fetchHistory();
});